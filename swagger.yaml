openapi: 3.0.0

info:
  title: Backend API
  description: API for working with the backend 
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/
    description: Develop server

paths:
  /jobs/{job_id}/run:
    post:
      tags:
        - "New"
      summary: Start job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful request
  /jobs/{job_id}/disable:
    post:
      tags:
        - "New"
      summary: Disable job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful request
  /jobs/{job_id}/enable:
    post:
      tags:
        - "New"
      summary: Enable job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful request

  /jobs/{job_id}/delete:
    delete:
      tags:
        - "New"
      summary: Delete job
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful request
  /jobs/{job_id}/builds/{build_id}/logs:
    get:
      tags:
        - "New"
      summary: Get the build logs
      parameters:
            - name: job_id
              in: path
              required: true
              schema:
                type: integer
                format: int32
     
            - name: build_id
              in: path
              required: true
              schema:
                type: integer
                format: int32
      responses:
        '200':
          description: successful request
  /views:
    get:
      tags:
        - "Views"
      summary: Get info about all view
      parameters:
        - in: query
          name: start
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: successful request


  /views/{view_id}:
    get:
      parameters:
        - name: view_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      tags:
          - "Views"
      summary: Get information about a specific view
      responses:
        '200':
          description: successful request
    

  /jobs:
    get:
      parameters:
        - in: query
          name: start
          schema:
            type: integer
            format: int32
        - in: query
          name: limit
          schema:
            type: integer
            format: int32
      tags:
            - "Job"
      summary: Get info about all jobs
      responses:
        '200':
          description: successful request
    

  /jobs/{job_id}:
    get:
      parameters:
        - name: job_id
          in: path
          required: true
          schema:
            type: integer
            format: int32

      tags:
            - "Job"
      summary: Get information about a specific job
      responses:
        '200':
          description: successful request
    

  /jobs/{job_id}/builds:
    get:
      parameters:
          - name: job_id
            in: path
            required: true
            schema:
              type: integer
              format: int32
      tags:
            - "Job"
      summary: Get information about all builds of the job
      responses:
        '200':
          description: successful request
   

  /jobs/{job_id}/builds/{build_id}:
    get:
      parameters:
            - name: job_id
              in: path
              required: true
              schema:
                type: integer
                format: int32
     
            - name: build_id
              in: path
              required: true
              schema:
                type: integer
                format: int32
      tags:
            - "Job"
      summary: Get information about a specific build
      responses:
        '200':
          description: successful request
  /trigger-data-fetch:
    get:
      tags:
        - "Fetch Data"
      summary: Fetch data from Jenkins
      responses:
        '200':
          description: successful request
